<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>SpringmvcAlone</display-name>
  <!-- 配置springMvc前端控制器 -->
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation配置springmvc加载的配置文件(配置处理器映射器、适配器等等)
  如果不配置contextConfigLocation,默认加载的是/WEB-INF/servlet名称.xml(springmvc-servlet.xml)
   -->
  	<init-param>
	  	<param-name>contextConfigLocation</param-name>
	  	<param-value>classpath:springmvc.xml</param-value>
  	</init-param>
  </servlet>
<servlet-mapping>
	<servlet-name>springmvc</servlet-name>
	<!-- 
	第一种：*.action:访问以.action结尾由DispatcherServlet进行解析
	第二种：/,任意后缀的访问地址都能由DispatcherServlet进行解析，对于静态文件
	的解析需要配置不让DispatcherServlet进行解析
	使用此种方式可以实现RESTful风格的url
	第三种：/*,这种配置不对。使用这种配置，最终要转发一个jsp页面，仍然会由
	DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。
	
	
	 -->
	<url-pattern>*.action</url-pattern>
</servlet-mapping>

  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>