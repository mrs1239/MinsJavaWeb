<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离性 注意：使用mapper代理方法开发，namespace有特殊重要的作用 -->
<mapper namespace="test">
	<!-- 在映射文件中配置很多sql语句 -->
	<!-- 通过select执行数据库查询 id:表示映射文件中的sql 将sql语句封装到mappedStatement对象中，所以将id称为statement的id 
		#{}表示一个占位符号 parameterType:指定输入参数类型 #{id}:其中的id表示接受输入的参数，参数名称是id，如果输入参数是简单类型，则#{}中的参数名可以任意，可以value或其他名称 
		resultType:指定sql输出结果的所映射的java对象类型，select指定resultType表示将单条记录映射成的java对象 ${} 
		:表示拼接sql串，将接受到参数的内容不加任何修饰拼接在sql中。 使用${}拼接sql，引起sql注入 ${value}:接受输入参数的内容，如果传入类型是简单类型，${}中只能使用value -->
	<select id="findUserById" parameterType="int"
		resultType="com.min.mybatis.po.User">
		SELECT * FROM USER WHERE ID = #{id}
	</select>
	<!-- 根据用户名模糊查询用户信息，可能返回多条 resultType:指定sql输出结果的所映射的java对象类型，select指定resultType表示将单条记录映射成的java对象 
		${} :表示拼接sql串，将接受到参数的内容不加任何修饰拼接在sql中。 使用${}拼接sql，引起sql注入 ${value}:接受输入参数的内容，如果传入类型是简单类型，${}中只能使用value -->
	<select id="findUserByName" parameterType="java.lang.String"
		resultType="com.min.mybatis.po.User">
		SELECT * FROM USER WHERE username LIKE '%${value}%'
	</select>
	<!-- 添加用户 parameterTypeL:指定输入参数是pojo(包括用户信息) #{}中指定pojo的属性名，接受到pojo对象的属性值,mybatis通过OGNL获取对象的属性值：Object-Graph 
		Navigation Language -->
	<insert id="addUser" parameterType="com.min.mybatis.po.User">
	<!-- 
	将插入数据的主键返回，返回到User对象中
	SELECT LAST_INSERT_ID()：得到刚刚insert进去记录的主键值，只适用于自增主键
	keyProperty:查询主键后设置到parameterType指定的对象的哪个属性
	order:SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来讲，它的执行顺序
	resultType：指定SELECT LAST_INSERT_ID()的结果类型
	 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		USER(username,sex,address,birthday)
		value(#{username},#{sex},#{address},#{birthday})
	</insert>
	<!-- 根据用户名删除用户记录 -->
	<delete id="removeUser" parameterType="java.lang.String">
		DELETE FROM `user` WHERE
		username = #{username}
	</delete>
	<!-- 根据id更新用户
	分析：
	需要传入用户的id
	需要传入用户的更新信息
	parameterType为需要输入的字段对应的java对象
	 -->
	<update id="updateUser" parameterType="com.min.mybatis.po.User">
	 update user set username=#{username},sex=#{sex},birthday=#{birthday},address=#{address} 
	 where id=#{id}
	</update>
</mapper>